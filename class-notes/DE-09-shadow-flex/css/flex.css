
.container1{
    background-color: antiquewhite;
    display: flex;
    /**  normalde default alt alta olan kutucuklar display:flex ile bütün kutular yan yana geliyor özgür kaiyor */
    flex-wrap: wrap;
    /** flex kullandığımızda elemanlar ekran küçüldükçe sıkışır, alta düşmez bu yüzden, wrap:browser küçüldükçe ekrana sığamayan elementler alt satıra geçsin,***wrap-reverse sığmayan elementleri ters çevirir ve öyle alt satıra indirir */
    /*! Yatay Hizalama: Justify-center  */
    justify-content: center;
    /** bu özellikle sigmayip asagi düsenler sayfayi ortaliyor */
    justify-content:flex-start;
    justify-content:flex-end;
    justify-content:space-between;
    justify-content:space-around;
    justify-content:space-evenly;

  /**  /** flex-start: Nesneler kapsayıcının başından başlayarak dizilirler.*/
    /** space-evenly:neseneler arası, en baş ve son eşit boşluk */
    /**space-around: Nesneler arasında eşit boşluklar bırakılır, başa sona yarım boşluk.
  /**space-between: İlk nesne başta, son nesne sonda olacak şekilde nesneler eşit olarak kapsayıcının içerisinde dizilirler.
  /**center: Nesneler tam ortalı olacak şekilde hizalanır.
  /**flex-end: Son nesne ve diğerleri en sağa yaslanacak şekilde hizalanır. */
}


.container1 div {
    background-color: tomato;
    width: 5rem;
    height: 5rem;
    text-align: center;
    /* sayilari ortaladik */

}

.container2{
    background-color: pink;

    display: flex;
    height: 15rem;
    /* dikeyde ortalamayi görebilmek icin height verdik */

    justify-content: flex-end;}
/*! Dikey Hizalama => align-items
  /**flex-start: Nesneler, kapsayıcının en üstünden başlayarak dizilirler.
/**flex-end: Nesneler, kapsayıcının en altından başlayarak, yukarı doğru dizilirler.
/**center: Nesneler ortalı bir şekilde dikey olarak sıralanırlar.
/**baseline: yazıların yerine bakılır, sıradanlığı bozan yazı tipi göz önüne alınarak hizalanmaya başlanılır.
/**stretch: Tüm nesneler kapsayıcı yüksekliğine eşit olacak şekilde dizilirler.*/
    /** align-items: center; */
    /** align-items: center ile dikeyde de ortaladik */
    /** align-items: flex-start;
    align-items: stretch; */
    /** strech kullanabilmek icin child divlere height verilmemis olmali, cunku bu ozellik otomatik olarak cocuklari baba divin büyüklügüne göre ayarlar */
    /** align-items: baseline; */
    /** tüm yazilari(icerigi) ayni cizgide olacak sekilde hizalar, kutulari önemsemez */





.container2 div{
    background-color: cornflowerblue;
    width: 5rem;
    height: 10rem;
}

/** baseline ile yazilara göre hizalamayi görebilmemiz icin yazilarin ve kutularin boyutunu bozacagiz */
.container2 div:nth-child(1){
    height: 5rem;
}

.container2 div:nth-child(2) {
    padding-top: 4rem;
}

.container2 div:nth-child(3) {
    height: 2rem;
    padding: 5rem 0;
    font-size: 5rem;
}

ul{
    list-style-type: none;
    background-color: cornsilk;
    height: 30rem;
    display: flex;
    justify-content: space-around;

    flex-wrap: wrap;
    align-items: flex-start;
    align-content: flex-start;
    /** align-items elemanlar sigmadiginda yeterli olamiyor o yuzden align-content kullaniliyor */
    /*!Çok satırlı verilerin dikeyde hizalanması için kullanılır,bütün elemanlar yukarı çıkıyorlar,***align-items: flex-start sadece üstte kalan verileri üste yapıştırır*/

    gap: 4rem 1rem;

    /*?gap, flex içerisindeki elemanların dikey ve yatay boşluklarını belirlemek için kullanılabilir.ilk yazılan  (satırlar arası yukarı aşağı) boşluk, 2. yazılan ise  (sutunlar arası, sağ sol) boşluktur */
}

ul li{
    background-color: darkgoldenrod;
    width: 4rem;
    height: 5rem;
}


.container4{
    background-color: darkmagenta;
    padding: 1rem 0;
    display: flex;
}

.container4 div{
    background-color: darkorange;
    width: 5rem;
    margin: 1rem;
}

.grow1 {
    flex-grow: 1;

    /*  default büyüme olsun x+x*/
}

.grow2 {
    /*? grow2 classindakiler diğerlerine göre 2 kat daha fazla büyüyebilir. x+2x*/
    flex-grow: 2;

}

.grow3 {
    /*? grow3 classindakiler diğerlerine göre 3 kat daha fazla büyüyebilir. x+3x*/
    flex-grow: 3;


}

.grow4 {
    /*? nogrow classindakiler diğerlerine göre hiç büyümezler*/
    flex-grow: 0;

}